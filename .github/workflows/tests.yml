name: Test
on: [push]
jobs:
  Integration:
    runs-on: ubuntu-latest
#    services:
#      mysql:
#        image: mysql:latest
#        env:
#          MYSQL_ALLOW_EMPTY_PASSWORD: yes
#        ports:
#          - '3306:3306'
    services:
      server:
        image: ${{ matrix.db.services.image }}
        env: ${{ matrix.db.services.env }}
        ports:
          - ${{ matrix.db.services.ports }}
    strategy:
      matrix:
        db:
          - env:
              ATIAA_DRIVER: sqlite
              ATIAA_FILE: sqlite.db
              ATIAA_PDO_DSN: sqlite:sqlite.db
              ATIAA_SKIP_DB: yes
            initialize: sqlite3 sqlite.db < tests/databases/sqlite.sql
            services:
              image: 'hello-world'
              env:
                GREET: Hello
              ports: '80:80'

          - env:
              ATIAA_DRIVER: mysql
              ATIAA_HOST: 127.0.0.1
              ATIAA_USER: root
              ATIAA_DBNAME: atiaa_test
              ATIAA_PDO_DSN: mysql:host=127.0.0.1;dbname=atiaa_test;user=root
            initialize: |
                sleep 10
                echo "create database atiaa_test;" | mysql -h 127.0.0.1 --user root
                mysql -h 127.0.0.1 --user root atiaa_test < tests/databases/mysql.sql
            services:
                image: mysql:latest
                env:
                  MYSQL_ALLOW_EMPTY_PASSWORD: yes
                ports: '3306:3306'

          - env:
              ATIAA_DRIVER: postgresql
              ATIAA_HOST: 127.0.0.1
              ATIAA_USER: postgres
              ATIAA_DBNAME: atiaa_test
              ATIAA_PDO_DSN: pgsql:host=127.0.0.1;dbname=atiaa_test;user=postgres
            initialize: |
              sleep 10
              psql -c 'create database atiaa_test;' --host 127.0.0.1 --user postgres
              psql -f tests/databases/postgresql.sql -U postgres -d atiaa_test --host 127.0.0.1
            services:
              image: postgres:latest
              env:
                POSTGRES_HOST_AUTH_METHOD: trust
              ports: '5432:5432'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          tools: composer
      - name: Running composer
        run: composer install
      - name: Initializing the database
        run: ${{ matrix.db.initialize }}
      - name: Running php unit tests
        env: ${{ matrix.db.env }}
        run: vendor/bin/phpunit  --coverage-clover coverage.clover -c tests/config/github.xml
      - name: Downloading Ocular Tool
        run: composer global require scrutinizer/ocular dev-master
      - name: Uploading Code Metrics
        run: php ~/.composer/vendor/bin/ocular code-coverage:upload --format=php-clover coverage.clover